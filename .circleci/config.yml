# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/MagnusTiberius/weatherservice
    steps:
      - checkout

      #- run: make

      #- save_cache: key: v1-pkg-cache
      #    paths:
      #      - "/go/pkg"

      - setup_remote_docker

      # specify any bash command here prefixed with `run: `
      - run: sudo apt-get install lsb-core
      - run: export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
      - run: echo $CLOUD_SDK_REPO
      - run: echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      - run: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
      - run: sudo apt-get update && sudo apt-get install google-cloud-sdk
      - run: go version
      - run: go get -v -t -d github.com/gorilla/mux
      #- run: go test -v ./...
      - run: go build -v web/main.go
      - run: mv main.exe web.exe
      - run: ls -l
      # docker build, login and push.
      - run: docker build -t "magnustiberius/weatherserviceweb" .
      - run: docker login -u=$DOCKER_USER -p=$DOCKER_PASS
      - run: docker push  magnustiberius/weatherserviceweb


      - run: gcloud docker -- push $GHOST/$GPROJECT-ID/weatherserviceweb
